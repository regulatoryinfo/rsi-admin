{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Map, ZoomAnimEvent, MapOptions, tileLayer, latLng, LatLng, LatLngBounds } from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@asymmetrik/ngx-leaflet\"; //import { NbOAuth2AuthStrategyOptions } from '../auth/public_api';\n\nexport let BaseMapComponent = /*#__PURE__*/(() => {\n  class BaseMapComponent {\n    constructor() {\n      this.map$ = new EventEmitter();\n      this.zoom$ = new EventEmitter();\n      this.move$ = new EventEmitter();\n      this.mapMove$ = new EventEmitter();\n      this.options = {\n        layers: [tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          opacity: 0.7,\n          maxZoom: 19,\n          detectRetina: true,\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        })],\n        zoom: 1,\n        center: latLng(0, 0)\n      };\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {\n      this.map.clearAllEventListeners; // this.map.remove();\n    }\n\n    onMapReady(map) {\n      this.map = map;\n      this.map$.emit(map);\n      this.zoom = map.getZoom();\n      this.zoom$.emit(this.zoom);\n    }\n\n    onMapZoomEnd(e) {\n      this.zoom = e.target.getZoom();\n      this.zoom$.emit(this.zoom);\n    }\n\n    onMapMouseMove(e) {\n      // console.log(\"e\" + JSON.stringify(e));\n      this.move = e.latlng;\n      this.move$.emit(this.move);\n    }\n\n    onMapMove(e) {\n      this.latlngBnds = this.map.getBounds();\n      this.mapMove = this.latlngBnds;\n      this.mapMove$.emit(this.mapMove);\n    }\n\n  }\n\n  BaseMapComponent.ɵfac = function BaseMapComponent_Factory(t) {\n    return new (t || BaseMapComponent)();\n  };\n\n  BaseMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BaseMapComponent,\n    selectors: [[\"ngx-base-map\"]],\n    inputs: {\n      options: \"options\"\n    },\n    outputs: {\n      map$: \"map$\",\n      zoom$: \"zoom$\",\n      move$: \"move$\",\n      mapMove$: \"mapMove$\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"leaflet\", \"\", 3, \"leafletOptions\", \"leafletMapReady\", \"leafletMapZoomEnd\", \"leafletMouseMove\", \"leafletMapMoveEnd\"]],\n    template: function BaseMapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"leafletMapReady\", function BaseMapComponent_Template_div_leafletMapReady_0_listener($event) {\n          return ctx.onMapReady($event);\n        })(\"leafletMapZoomEnd\", function BaseMapComponent_Template_div_leafletMapZoomEnd_0_listener($event) {\n          return ctx.onMapZoomEnd($event);\n        })(\"leafletMouseMove\", function BaseMapComponent_Template_div_leafletMouseMove_0_listener($event) {\n          return ctx.onMapMouseMove($event);\n        })(\"leafletMapMoveEnd\", function BaseMapComponent_Template_div_leafletMapMoveEnd_0_listener($event) {\n          return ctx.onMapMove($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"leafletOptions\", ctx.options);\n      }\n    },\n    dependencies: [i1.LeafletDirective],\n    styles: [\".map-container[_ngcontent-%COMP%]{width:100%;height:100%;position:inherit}\"]\n  });\n  return BaseMapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}